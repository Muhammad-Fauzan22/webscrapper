name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.REGISTRY_LOGIN_SERVER }}/super-ai-scraper:${{ github.sha }}
          ${{ secrets.REGISTRY_LOGIN_SERVER }}/super-ai-scraper:latest
          
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
        container-name: super-ai-scraper
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/super-ai-scraper:${{ github.sha }}
        cpu: 1.0
        memory: 1.5
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        environment-variables: |
          MONGO_URI=${{ secrets.MONGO_URI }}
          GDRIVE_FOLDER_ID=${{ secrets.GDRIVE_FOLDER_ID }}
          HF_TOKEN=${{ secrets.HF_TOKEN }}
          DEEPSEEK_KEY=${{ secrets.DEEPSEEK_KEY }}
          PERPLEXITY_KEY=${{ secrets.PERPLEXITY_KEY }}
          CLAUDE_KEY=${{ secrets.CLAUDE_KEY }}
          CYPHER_KEY=${{ secrets.CYPHER_KEY }}
          GEMMA_KEY=${{ secrets.GEMMA_KEY }}
          TOKEN_BUDGET=100000
          
    - name: Notify on success
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Deployment successful!'
          })
